# -*- coding: utf-8 -*-

#-------------------------------------------------------------------------------
# Copyright (c) 2015 Artur Eganyan
#
# This work is provided "AS IS", WITHOUT ANY WARRANTY, express or implied.
#-------------------------------------------------------------------------------

# Пакет - это директория, содержащая файл __init__.py, модули и другие пакеты. 
# Но фактически, пакет A - это модуль __init__.py в директории A, т.е. это 
# просто модуль с особым названием.
#
# Все способы подключения модуля работают и с пакетами, просто надо указывать 
# путь к модулю/пакету в виде "пакет1.пакет2. ... .модуль":
# 1. import <путь>
# 2. from <путь> import <модуль|пакет>
# 3. from <путь> import *  (эта инструкция работает иначе, см. ниже)
#
# В случае 3, поскольку пакет - это просто модуль __init__.py, выполняется один 
# из двух вариантов:
# 1. Подключаются все модули, перечисленные в переменной-списке __all__ в __init__.py
# 2. Если __all__ не определен, создаются ссылки на все объекты модуля __init__.py.
#    Т.е. ссылки на все элементы словаря <путь> - в том числе, на все модули пакета,
#    подключенные ранее способом 1.
#
# В любом случае подключаются все пакеты из <путь>. Другими словами, 
# выполняется код каждого __init__.py, если ранее он не выполнялся.
#
# Разные модули могут содержать одноименные объекты, а разные пакеты могут 
# содержать одноименные модули. Т.е. модули и пакеты - это способ не только 
# разделить код на части, но и предотвратить конфликт имен.

# В примере пакет package содержит пакеты a и b, в которых есть модули
# module1 и module2.

# 1
import package.a.module1       # Будут подключены:
                               # package/__init__.py,
                               # package/a/__init__.py,
                               # package/a/module1.py,
                               # и создана ссылка package.a.module1
                                        
print package                  # Ссылка на модуль package/__init__.py
print package.a                # Ссылка на модуль package/a/__init__.py
print package.a.module1        # Ссылка на модуль package/a/module1.py

# 2                                
from package.a import module2  # Делается то же, что в 1, но создается
                               # только ссылка module2
print module2                  # Ссылка на модуль package/a/module2.py

# 3
from package.a import *        # Поскольку в package/a/__init__.py нет списка __all__,
                               # будет выполнен импорт всех объектов модуля package.a
                               # (переменная var_a и ссылка module1, созданная после
                               # выполнения import package.a.module1)

print var_a                    # Переменная из пакета package.a
print module1                  # Ссылка на модуль package/a/module1.py

from package.b import *        # В package/b/__init__.py есть список __all__,
                               # поэтому будут подключены перечисленные в нем модули,
                               # а объекты модуля package.b подключены не будут

print module1                  # Ссылка на модуль package/b/module1.py
print module2                  # Ссылка на модуль package/b/module2.py
#print var_b                   # Ошибка, переменная не определена, хотя она и есть в 
                               # package/b/__init__.py
